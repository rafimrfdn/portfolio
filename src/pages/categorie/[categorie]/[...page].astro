---
import Layout from '@/layouts/blog.layout.astro'
import Categorie from '@/views/Categorie/index.astro'

let allPosts = await Astro.glob('../../../posts/*.md')
allPosts.sort(
  (a, b) =>
    new Date(b.frontmatter.date).valueOf() -
    new Date(a.frontmatter.date).valueOf(),
)

export async function getStaticPaths({ paginate }) {
  let allPosts = await Astro.glob('../../../posts/*.md')
  allPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf(),
  )

  const allCategories = new Set()
  allPosts.map((post) => {
    post.frontmatter.categories &&
      post.frontmatter.categories.map((categorie) =>
        allCategories.add(categorie),
      )
  })

  return Array.from(allCategories).map((categorie) => {
    const filteredPosts = allPosts.filter(
      (post) =>
        post.frontmatter.categories &&
        post.frontmatter.categories.includes(categorie),
    )
    return paginate(filteredPosts, {
      params: { categorie },
      pageSize: 4,
    })
  })
}

const { page } = Astro.props
const { categorie } = Astro.params
const title = `${categorie}`

const featuredPost = allPosts.filter((post) => post.frontmatter.featured)

const categories = allPosts.reduce((acc, post) => {
  if (post.frontmatter.categories) {
    post.frontmatter.categories.forEach((category) => {
      if (!acc.includes(category)) {
        acc.push(category)
      }
    })
  }
  return acc
}, [])

const recentPosts = allPosts.slice(0, 4)
---

<Layout
  lang="en"
  title={`Blog | Category: ${title} | Mohammad Abu Mattar`}
  description="Personal website, to show my software engineering skills at web development."
>
  <Categorie
    title={title}
    slug={categorie}
    allPosts={allPosts}
    page={page}
    featuredPost={featuredPost}
    categories={categories}
    recentPosts={recentPosts}
  />
</Layout>
