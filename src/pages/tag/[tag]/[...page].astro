---
import Layout from '@/layouts/blog.layout.astro';
import Tag from '@/views/Tag/index.astro';

let allPosts = await Astro.glob('../../../posts/*.md');
allPosts.sort(
  (a, b) =>
    new Date(b.frontmatter.date).valueOf() -
    new Date(a.frontmatter.date).valueOf(),
);

const nonDraftPosts = allPosts.filter((post) => !post.frontmatter.draft);

export async function getStaticPaths({ paginate }) {
  let allPosts = await Astro.glob('../../../posts/*.md');
  allPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf(),
  );

  const allTags = new Set();
  allPosts.map((post) => {
    post.frontmatter.tags &&
      post.frontmatter.tags.map((tag) => allTags.add(tag));
  });

  const nonDraftPosts = allPosts.filter((post) => !post.frontmatter.draft);

  return Array.from(allTags).map((tag) => {
    const filteredPosts = nonDraftPosts.filter(
      (post) => post.frontmatter.tags && post.frontmatter.tags.includes(tag),
    );
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: 4,
    });
  });
}

const { page } = Astro.props;
const { tag } = Astro.params;
const title = `${tag}`;

const featuredPost = nonDraftPosts.filter((post) => post.frontmatter.featured);

const categories = nonDraftPosts.reduce((acc, post) => {
  if (post.frontmatter.categories) {
    post.frontmatter.categories.forEach((category) => {
      if (!acc.includes(category)) {
        acc.push(category);
      }
    });
  }
  return acc;
}, []);

const recentPosts = nonDraftPosts.slice(0, 3);
---

<Layout
  lang="en"
  title={`Blog | Tag: ${title} | Mohammad Abu Mattar`}
  description="Personal website, to show my software engineering skills at web development."
>
  <Tag
    title={title}
    slug={tag}
    allPosts={nonDraftPosts}
    page={page}
    featuredPost={featuredPost}
    categories={categories}
    recentPosts={recentPosts}
  />
</Layout>
